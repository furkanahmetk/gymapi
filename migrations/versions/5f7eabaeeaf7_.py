"""empty message

Revision ID: 5f7eabaeeaf7
Revises: 
Create Date: 2025-05-25 17:05:30.182499

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5f7eabaeeaf7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Blacklist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('Instructors',
    sa.Column('SSN', sa.String(length=20), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('SSN')
    )
    op.create_table('Membership',
    sa.Column('sign', sa.String(length=2), nullable=False),
    sa.Column('fee', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('typeName', sa.String(length=10), nullable=False),
    sa.Column('plan', sa.String(length=8), nullable=False),
    sa.PrimaryKeyConstraint('sign')
    )
    op.create_table('Room',
    sa.Column('ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomName', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('activities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Course',
    sa.Column('courseName', sa.String(length=20), nullable=False),
    sa.Column('capacity', sa.Numeric(precision=2), nullable=False),
    sa.Column('isSpecial', sa.Boolean(), nullable=False),
    sa.Column('InstructorID', sa.String(length=20), nullable=False),
    sa.Column('roomId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['InstructorID'], ['Instructors.SSN'], ),
    sa.ForeignKeyConstraint(['roomId'], ['Room.ID'], ),
    sa.PrimaryKeyConstraint('courseName')
    )
    op.create_table('Users',
    sa.Column('SSN', sa.String(length=20), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('membershipType', sa.String(length=2), nullable=True),
    sa.ForeignKeyConstraint(['membershipType'], ['Membership.sign'], ),
    sa.PrimaryKeyConstraint('SSN')
    )
    op.create_table('Phone',
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('userSSN', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['userSSN'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('phone')
    )
    op.create_table('RoomSchedule',
    sa.Column('scheduleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomId', sa.Integer(), nullable=False),
    sa.Column('scheduleDate', sa.Date(), nullable=False),
    sa.Column('scheduleTime', sa.Time(), nullable=False),
    sa.Column('bookingType', sa.String(length=10), nullable=False),
    sa.Column('userID', sa.String(length=20), nullable=True),
    sa.Column('courseName', sa.String(length=20), nullable=True),
    sa.Column('isBooked', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['courseName'], ['Course.courseName'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['roomId'], ['Room.ID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('scheduleID')
    )
    op.create_table('User_Course',
    sa.Column('courseName', sa.String(length=20), nullable=False),
    sa.Column('userID', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['courseName'], ['Course.courseName'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('courseName', 'userID')
    )
    op.create_table('Feedback',
    sa.Column('feedBackNo', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomId', sa.Integer(), nullable=False),
    sa.Column('userID', sa.String(length=20), nullable=False),
    sa.Column('scheduleID', sa.Integer(), nullable=False),
    sa.Column('score', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('comment', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['roomId'], ['Room.ID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scheduleID'], ['RoomSchedule.scheduleID'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['Users.SSN'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('feedBackNo')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Feedback')
    op.drop_table('User_Course')
    op.drop_table('RoomSchedule')
    op.drop_table('Phone')
    op.drop_table('Users')
    op.drop_table('Course')
    op.drop_table('activities')
    op.drop_table('Room')
    op.drop_table('Membership')
    op.drop_table('Instructors')
    op.drop_table('Blacklist')
    # ### end Alembic commands ###
